{'cells': [{'cell_type': 'code',
   'execution_count': 2,
   'metadata': {},
   'outputs': [],
   'source': ['import math\n',
    'import pandas_datareader as web\n',
    'import numpy as np\n',
    'import pandas as pd\n',
    'from sklearn.preprocessing import MinMaxScaler\n',
    'from keras.models import Sequential\n',
    'from keras.layers import Dense, LSTM\n',
    'import matplotlib.pyplot as plt\n',
    "plt.style.use('fivethirtyeight')"]},
  {'cell_type': 'code',
   'execution_count': 4,
   'metadata': {},
   'outputs': [{'data': {'text/html': ['<div>\n',
       '<style scoped>\n',
       '    .dataframe tbody tr th:only-of-type {\n',
       '        vertical-align: middle;\n',
       '    }\n',
       '\n',
       '    .dataframe tbody tr th {\n',
       '        vertical-align: top;\n',
       '    }\n',
       '\n',
       '    .dataframe thead th {\n',
       '        text-align: right;\n',
       '    }\n',
       '</style>\n',
       '<table border="1" class="dataframe">\n',
       '  <thead>\n',
       '    <tr style="text-align: right;">\n',
       '      <th></th>\n',
       '      <th>High</th>\n',
       '      <th>Low</th>\n',
       '      <th>Open</th>\n',
       '      <th>Close</th>\n',
       '      <th>Volume</th>\n',
       '      <th>Adj Close</th>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>Date</th>\n',
       '      <th></th>\n',
       '      <th></th>\n',
       '      <th></th>\n',
       '      <th></th>\n',
       '      <th></th>\n',
       '      <th></th>\n',
       '    </tr>\n',
       '  </thead>\n',
       '  <tbody>\n',
       '    <tr>\n',
       '      <th>2013-12-31</th>\n',
       '      <td>20.045713</td>\n',
       '      <td>19.785715</td>\n',
       '      <td>19.791786</td>\n',
       '      <td>20.036428</td>\n',
       '      <td>223084400.0</td>\n',
       '      <td>17.906834</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2014-01-02</th>\n',
       '      <td>19.893929</td>\n',
       '      <td>19.715000</td>\n',
       '      <td>19.845715</td>\n',
       '      <td>19.754642</td>\n',
       '      <td>234684800.0</td>\n',
       '      <td>17.655001</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2014-01-03</th>\n',
       '      <td>19.775000</td>\n',
       '      <td>19.301071</td>\n',
       '      <td>19.745001</td>\n',
       '      <td>19.320715</td>\n',
       '      <td>392467600.0</td>\n',
       '      <td>17.267195</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2014-01-06</th>\n',
       '      <td>19.528572</td>\n',
       '      <td>19.057142</td>\n',
       '      <td>19.194643</td>\n',
       '      <td>19.426071</td>\n',
       '      <td>412610800.0</td>\n',
       '      <td>17.361351</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2014-01-07</th>\n',
       '      <td>19.498571</td>\n',
       '      <td>19.211428</td>\n',
       '      <td>19.440001</td>\n',
       '      <td>19.287144</td>\n',
       '      <td>317209200.0</td>\n',
       '      <td>17.237186</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>...</th>\n',
       '      <td>...</td>\n',
       '      <td>...</td>\n',
       '      <td>...</td>\n',
       '      <td>...</td>\n',
       '      <td>...</td>\n',
       '      <td>...</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2020-10-16</th>\n',
       '      <td>121.550003</td>\n',
       '      <td>118.809998</td>\n',
       '      <td>121.279999</td>\n',
       '      <td>119.019997</td>\n',
       '      <td>115393800.0</td>\n',
       '      <td>119.019997</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2020-10-19</th>\n',
       '      <td>120.419998</td>\n',
       '      <td>115.660004</td>\n',
       '      <td>119.959999</td>\n',
       '      <td>115.980003</td>\n',
       '      <td>120639300.0</td>\n',
       '      <td>115.980003</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2020-10-20</th>\n',
       '      <td>118.980003</td>\n',
       '      <td>115.629997</td>\n',
       '      <td>116.199997</td>\n',
       '      <td>117.510002</td>\n',
       '      <td>124423700.0</td>\n',
       '      <td>117.510002</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2020-10-21</th>\n',
       '      <td>118.709999</td>\n',
       '      <td>116.449997</td>\n',
       '      <td>116.669998</td>\n',
       '      <td>116.870003</td>\n',
       '      <td>89946000.0</td>\n',
       '      <td>116.870003</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2020-10-22</th>\n',
       '      <td>118.040001</td>\n',
       '      <td>114.589996</td>\n',
       '      <td>117.449997</td>\n',
       '      <td>115.750000</td>\n',
       '      <td>101988000.0</td>\n',
       '      <td>115.750000</td>\n',
       '    </tr>\n',
       '  </tbody>\n',
       '</table>\n',
       '<p>1716 rows Ã— 6 columns</p>\n',
       '</div>'],
      'text/plain': ['                  High         Low        Open       Close       Volume  \\\n',
       'Date                                                                      \n',
       '2013-12-31   20.045713   19.785715   19.791786   20.036428  223084400.0   \n',
       '2014-01-02   19.893929   19.715000   19.845715   19.754642  234684800.0   \n',
       '2014-01-03   19.775000   19.301071   19.745001   19.320715  392467600.0   \n',
       '2014-01-06   19.528572   19.057142   19.194643   19.426071  412610800.0   \n',
       '2014-01-07   19.498571   19.211428   19.440001   19.287144  317209200.0   \n',
       '...                ...         ...         ...         ...          ...   \n',
       '2020-10-16  121.550003  118.809998  121.279999  119.019997  115393800.0   \n',
       '2020-10-19  120.419998  115.660004  119.959999  115.980003  120639300.0   \n',
       '2020-10-20  118.980003  115.629997  116.199997  117.510002  124423700.0   \n',
       '2020-10-21  118.709999  116.449997  116.669998  116.870003   89946000.0   \n',
       '2020-10-22  118.040001  114.589996  117.449997  115.750000  101988000.0   \n',
       '\n',
       '             Adj Close  \n',
       'Date                    \n',
       '2013-12-31   17.906834  \n',
       '2014-01-02   17.655001  \n',
       '2014-01-03   17.267195  \n',
       '2014-01-06   17.361351  \n',
       '2014-01-07   17.237186  \n',
       '...                ...  \n',
       '2020-10-16  119.019997  \n',
       '2020-10-19  115.980003  \n',
       '2020-10-20  117.510002  \n',
       '2020-10-21  116.870003  \n',
       '2020-10-22  115.750000  \n',
       '\n',
       '[1716 rows x 6 columns]']},
     'execution_count': 4,
     'metadata': {},
     'output_type': 'execute_result'}],
   'source': ["df = web.DataReader('AAPL',data_source='yahoo', start='2014-01-01', end='2020-10-22')\n",
    'df']},
  {'cell_type': 'code',
   'execution_count': 6,
   'metadata': {},
   'outputs': [{'data': {'image/png': '\n',
      'text/plain': ['<Figure size 1152x576 with 1 Axes>']},
     'metadata': {},
     'output_type': 'display_data'}],
   'source': ['plt.figure(figsize=(16,8))\n',
    "plt.title('Close Price History')\n",
    "plt.plot(df['Close'])\n",
    "plt.xlabel('Date', fontsize=18)\n",
    "plt.ylabel('Close Price USD ($)',fontsize=18)\n",
    'plt.legend\n',
    'plt.show()']},
  {'cell_type': 'code',
   'execution_count': 7,
   'metadata': {},
   'outputs': [{'data': {'text/plain': ['1373']},
     'execution_count': 7,
     'metadata': {},
     'output_type': 'execute_result'}],
   'source': ["data = df.filter(['Close'])\n",
    'dataset = data.values\n',
    '\n',
    '#Get the numbers of rows to train the model on\n',
    'training_data_len = math.ceil(len(dataset) * .8 )\n',
    '\n',
    'training_data_len']},
  {'cell_type': 'code',
   'execution_count': 8,
   'metadata': {},
   'outputs': [{'data': {'text/plain': ['array([[0.01880108],\n',
       '       [0.0163788 ],\n',
       '       [0.01264868],\n',
       '       ...,\n',
       '       [0.85670172],\n',
       '       [0.85120017],\n',
       '       [0.84157242]])']},
     'execution_count': 8,
     'metadata': {},
     'output_type': 'execute_result'}],
   'source': ['#Scale the data\n',
    'scaler = MinMaxScaler(feature_range=(0,1))\n',
    'scaled_data = scaler.fit_transform(dataset)\n',
    '\n',
    'scaled_data\n',
    '\n']},
  {'cell_type': 'code',
   'execution_count': 10,
   'metadata': {},
   'outputs': [{'name': 'stdout',
     'output_type': 'stream',
     'text': ['[array([0.01880108, 0.0163788 , 0.01264868, 0.01355434, 0.01236009,\n',
      '       0.01341006, 0.01127942, 0.01018034, 0.0110369 , 0.01430959,\n',
      '       0.01767744, 0.01672265, 0.0125535 , 0.01513235, 0.01588145,\n',
      '       0.01731517, 0.01421134, 0.01557138, 0.00206308, 0.0002978 ,\n',
      '       0.        , 0.00025174, 0.00053726, 0.00276614, 0.00393276,\n',
      '       0.0039082 , 0.00610943, 0.00896766, 0.0111075 , 0.01109522,\n',
      '       0.01370784, 0.01357277, 0.01418678, 0.01154038, 0.0096308 ,\n',
      '       0.00781946, 0.00852558, 0.00684011, 0.00539411, 0.00856242,\n',
      '       0.00812339, 0.00859005, 0.00965842, 0.01000228, 0.00950799,\n',
      '       0.00941283, 0.00956018, 0.0111474 , 0.01130705, 0.0094773 ,\n',
      '       0.00764753, 0.0082769 , 0.00970755, 0.00966457, 0.00887864,\n',
      '       0.01015884, 0.01209914, 0.01387977, 0.01228026, 0.01156801])]\n',
      '[0.011383799987912946]\n',
      '\n',
      '[array([0.01880108, 0.0163788 , 0.01264868, 0.01355434, 0.01236009,\n',
      '       0.01341006, 0.01127942, 0.01018034, 0.0110369 , 0.01430959,\n',
      '       0.01767744, 0.01672265, 0.0125535 , 0.01513235, 0.01588145,\n',
      '       0.01731517, 0.01421134, 0.01557138, 0.00206308, 0.0002978 ,\n',
      '       0.        , 0.00025174, 0.00053726, 0.00276614, 0.00393276,\n',
      '       0.0039082 , 0.00610943, 0.00896766, 0.0111075 , 0.01109522,\n',
      '       0.01370784, 0.01357277, 0.01418678, 0.01154038, 0.0096308 ,\n',
      '       0.00781946, 0.00852558, 0.00684011, 0.00539411, 0.00856242,\n',
      '       0.00812339, 0.00859005, 0.00965842, 0.01000228, 0.00950799,\n',
      '       0.00941283, 0.00956018, 0.0111474 , 0.01130705, 0.0094773 ,\n',
      '       0.00764753, 0.0082769 , 0.00970755, 0.00966457, 0.00887864,\n',
      '       0.01015884, 0.01209914, 0.01387977, 0.01228026, 0.01156801]), array([0.0163788 , 0.01264868, 0.01355434, 0.01236009, 0.01341006,\n',
      '       0.01127942, 0.01018034, 0.0110369 , 0.01430959, 0.01767744,\n',
      '       0.01672265, 0.0125535 , 0.01513235, 0.01588145, 0.01731517,\n',
      '       0.01421134, 0.01557138, 0.00206308, 0.0002978 , 0.        ,\n',
      '       0.00025174, 0.00053726, 0.00276614, 0.00393276, 0.0039082 ,\n',
      '       0.00610943, 0.00896766, 0.0111075 , 0.01109522, 0.01370784,\n',
      '       0.01357277, 0.01418678, 0.01154038, 0.0096308 , 0.00781946,\n',
      '       0.00852558, 0.00684011, 0.00539411, 0.00856242, 0.00812339,\n',
      '       0.00859005, 0.00965842, 0.01000228, 0.00950799, 0.00941283,\n',
      '       0.00956018, 0.0111474 , 0.01130705, 0.0094773 , 0.00764753,\n',
      '       0.0082769 , 0.00970755, 0.00966457, 0.00887864, 0.01015884,\n',
      '       0.01209914, 0.01387977, 0.01228026, 0.01156801, 0.0113838 ])]\n',
      '[0.011383799987912946, 0.011346958362273507]\n',
      '\n']}],
   'source': ['#Create the training dataset\n',
    '#create the scaled training data set\n',
    '\n',
    'train_data = scaled_data[0:training_data_len , :]\n',
    '\n',
    '#Split the data into x_train and y_train data sets\n',
    '\n',
    'x_train = []\n',
    'y_train = []\n',
    '\n',
    'for i in range(60, len(train_data)):\n',
    '    x_train.append(train_data[i-60:i, 0])\n',
    '    y_train.append(train_data[i,0])\n',
    '    \n',
    '    if i<=61:\n',
    '        print(x_train)\n',
    '        print(y_train)\n',
    '        print()']},
  {'cell_type': 'code',
   'execution_count': 11,
   'metadata': {},
   'outputs': [{'data': {'text/plain': ['(1313, 60, 1)']},
     'execution_count': 11,
     'metadata': {},
     'output_type': 'execute_result'}],
   'source': ['#Convert the x_train and y_train to numpy arrays\n',
    'x_train, y_train = np.array(x_train), np.array(y_train)\n',
    '\n',
    '#Reshape the data\n',
    'x_train = np.reshape(x_train, (x_train.shape[0], x_train.shape[1], 1))\n',
    'x_train.shape']},
  {'cell_type': 'code',
   'execution_count': 13,
   'metadata': {},
   'outputs': [],
   'source': ['#Build the LSTM model\n',
    'model = Sequential()\n',
    'model.add(LSTM(50, return_sequences=True, input_shape= (x_train.shape[1], 1)))\n',
    'model.add(LSTM(50, return_sequences = False)) \n',
    'model.add(Dense(25))\n',
    'model.add(Dense(1))\n',
    '\n']},
  {'cell_type': 'code',
   'execution_count': 14,
   'metadata': {},
   'outputs': [],
   'source': ['#Compile the model\n',
    "model.compile(optimizer='adam', loss='mean_squared_error')\n"]},
  {'cell_type': 'code',
   'execution_count': 15,
   'metadata': {},
   'outputs': [{'name': 'stdout',
     'output_type': 'stream',
     'text': ['1313/1313 [==============================] - 17s 13ms/step - loss: 3.1164e-04\n']},
    {'data': {'text/plain': ['<tensorflow.python.keras.callbacks.History at 0x2bc0fce2320>']},
     'execution_count': 15,
     'metadata': {},
     'output_type': 'execute_result'}],
   'source': ['#Train the model\n',
    'model.fit(x_train, y_train, batch_size=1, epochs=1 )']},
  {'cell_type': 'code',
   'execution_count': 16,
   'metadata': {},
   'outputs': [],
   'source': ['#Create the testing data set\n',
    '#Create a new array containing scaled values from index 1543 to 2003\n',
    'test_data = scaled_data[training_data_len - 60: , :]\n',
    '#Create the data sets x_test and y_test\n',
    'x_test = []\n',
    'y_test = dataset[training_data_len:, :]\n',
    'for i in range(60, len(test_data)):\n',
    '    x_test.append(test_data[i-60:i, 0])\n',
    '    ']},
  {'cell_type': 'code',
   'execution_count': 17,
   'metadata': {},
   'outputs': [],
   'source': ['#Convert the data to a numpy array\n',
    'x_test = np.array(x_test)']},
  {'cell_type': 'code',
   'execution_count': 18,
   'metadata': {},
   'outputs': [],
   'source': ['#Reshape the data\n',
    'x_test = np.reshape(x_test, (x_test.shape[0], x_test.shape[1], 1))']},
  {'cell_type': 'code',
   'execution_count': 19,
   'metadata': {},
   'outputs': [],
   'source': ['#Get the models predicted price values\n',
    'predictions = model.predict(x_test)\n',
    'predictions = scaler.inverse_transform(predictions)']},
  {'cell_type': 'code',
   'execution_count': 20,
   'metadata': {},
   'outputs': [{'data': {'text/plain': ['1.6311736927088079']},
     'execution_count': 20,
     'metadata': {},
     'output_type': 'execute_result'}],
   'source': ['#Get the root mean squared error (RMSE)\n',
    'rmse = np.sqrt( np.mean( predictions - y_test )**2 )\n',
    'rmse']},
  {'cell_type': 'code',
   'execution_count': 21,
   'metadata': {},
   'outputs': [{'name': 'stderr',
     'output_type': 'stream',
     'text': ['c:\\users\\anash\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\ipykernel_launcher.py:4: SettingWithCopyWarning: \n',
      'A value is trying to be set on a copy of a slice from a DataFrame.\n',
      'Try using .loc[row_indexer,col_indexer] = value instead\n',
      '\n',
      'See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n',
      '  after removing the cwd from sys.path.\n']},
    {'data': {'image/png': '\n',
      'text/plain': ['<Figure size 1152x576 with 1 Axes>']},
     'metadata': {},
     'output_type': 'display_data'}],
   'source': ['#plot the data\n',
    'train = data[:training_data_len]\n',
    'valid = data[training_data_len:]\n',
    "valid['predictions'] = predictions\n",
    '\n',
    '#Visualize the data\n',
    'plt.figure(figsize=(16,8))\n',
    "plt.title('Model')\n",
    "plt.xlabel('Date', fontsize=18)\n",
    "plt.ylabel('Close Price USD ($)', fontsize=18)\n",
    "plt.plot(train['Close'])\n",
    "plt.plot(valid[['Close', 'predictions']])\n",
    "plt.legend(['Train', 'Val', 'predictions'], loc='lower right')\n",
    'plt.show()']},
  {'cell_type': 'code',
   'execution_count': 22,
   'metadata': {},
   'outputs': [{'data': {'text/html': ['<div>\n',
       '<style scoped>\n',
       '    .dataframe tbody tr th:only-of-type {\n',
       '        vertical-align: middle;\n',
       '    }\n',
       '\n',
       '    .dataframe tbody tr th {\n',
       '        vertical-align: top;\n',
       '    }\n',
       '\n',
       '    .dataframe thead th {\n',
       '        text-align: right;\n',
       '    }\n',
       '</style>\n',
       '<table border="1" class="dataframe">\n',
       '  <thead>\n',
       '    <tr style="text-align: right;">\n',
       '      <th></th>\n',
       '      <th>Close</th>\n',
       '      <th>predictions</th>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>Date</th>\n',
       '      <th></th>\n',
       '      <th></th>\n',
       '    </tr>\n',
       '  </thead>\n',
       '  <tbody>\n',
       '    <tr>\n',
       '      <th>2019-06-17</th>\n',
       '      <td>48.472500</td>\n',
       '      <td>47.467762</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2019-06-18</th>\n',
       '      <td>49.612499</td>\n',
       '      <td>47.760941</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2019-06-19</th>\n',
       '      <td>49.467499</td>\n',
       '      <td>48.096512</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2019-06-20</th>\n',
       '      <td>49.865002</td>\n',
       '      <td>48.403915</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2019-06-21</th>\n',
       '      <td>49.695000</td>\n',
       '      <td>48.705982</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>...</th>\n',
       '      <td>...</td>\n',
       '      <td>...</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2020-10-16</th>\n',
       '      <td>119.019997</td>\n',
       '      <td>116.521042</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2020-10-19</th>\n',
       '      <td>115.980003</td>\n',
       '      <td>116.856560</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2020-10-20</th>\n',
       '      <td>117.510002</td>\n',
       '      <td>116.594261</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2020-10-21</th>\n',
       '      <td>116.870003</td>\n',
       '      <td>116.229141</td>\n',
       '    </tr>\n',
       '    <tr>\n',
       '      <th>2020-10-22</th>\n',
       '      <td>115.750000</td>\n',
       '      <td>115.759773</td>\n',
       '    </tr>\n',
       '  </tbody>\n',
       '</table>\n',
       '<p>343 rows Ã— 2 columns</p>\n',
       '</div>'],
      'text/plain': ['                 Close  predictions\n',
       'Date                               \n',
       '2019-06-17   48.472500    47.467762\n',
       '2019-06-18   49.612499    47.760941\n',
       '2019-06-19   49.467499    48.096512\n',
       '2019-06-20   49.865002    48.403915\n',
       '2019-06-21   49.695000    48.705982\n',
       '...                ...          ...\n',
       '2020-10-16  119.019997   116.521042\n',
       '2020-10-19  115.980003   116.856560\n',
       '2020-10-20  117.510002   116.594261\n',
       '2020-10-21  116.870003   116.229141\n',
       '2020-10-22  115.750000   115.759773\n',
       '\n',
       '[343 rows x 2 columns]']},
     'execution_count': 22,
     'metadata': {},
     'output_type': 'execute_result'}],
   'source': ['#Show the valid and predicted prices\n', 'valid ']},
  {'cell_type': 'code',
   'execution_count': 25,
   'metadata': {},
   'outputs': [{'name': 'stdout',
     'output_type': 'stream',
     'text': ['[[115.15989]]\n']}],
   'source': ['#Get the quote\n',
    "apple_quote = web.DataReader('AAPL', data_source='yahoo',start='2014-01-01', end='2020-10-22')\n",
    '\n',
    '#Create a new dataframe\n',
    "new_df = apple_quote.filter(['Close'])\n",
    '\n',
    '#Get the last 60 days closing price values and convert the dataframe to an array\n',
    'last_60_days = new_df[-60:].values\n',
    '\n',
    '#Scale the data to be values between 0 and 1\n',
    'last_60_days_scaled = scaler.transform(last_60_days)\n',
    '\n',
    '#Create an empty list\n',
    'X_test = []\n',
    '\n',
    '#Append the past 60 days\n',
    'X_test.append(last_60_days_scaled)\n',
    '\n',
    '#Convert the x_test data set to a numpy array\n',
    'X_test = np.array(X_test)\n',
    '\n',
    '#Reshape the data\n',
    'X_test = np.reshape(X_test, (X_test.shape[0], X_test.shape[1], 1))\n',
    '\n',
    '#Get the predicted scaled price\n',
    'pred_price = model.predict(X_test)\n',
    '\n',
    '#undo the scaling\n',
    'pred_price = scaler.inverse_transform(pred_price)\n',
    'print(pred_price)']},
  {'cell_type': 'code',
   'execution_count': 27,
   'metadata': {},
   'outputs': [{'name': 'stdout',
     'output_type': 'stream',
     'text': ['Date\n',
      '2013-12-31     20.036428\n',
      '2014-01-02     19.754642\n',
      '2014-01-03     19.320715\n',
      '2014-01-06     19.426071\n',
      '2014-01-07     19.287144\n',
      '                 ...    \n',
      '2020-10-16    119.019997\n',
      '2020-10-19    115.980003\n',
      '2020-10-20    117.510002\n',
      '2020-10-21    116.870003\n',
      '2020-10-22    115.750000\n',
      'Name: Close, Length: 1716, dtype: float64\n']}],
   'source': ['#Get the quote\n',
    '\n',
    "apple_quote2 = web.DataReader('AAPL', data_source='yahoo',start='2014-01-01', end='2020-10-22')\n",
    '\n',
    "print(apple_quote2['Close'])"]},
  {'cell_type': 'code',
   'execution_count': 'null',
   'metadata': {},
   'outputs': [],
   'source': []}],
 'metadata': {'kernelspec': {'display_name': 'Python 3',
   'language': 'python',
   'name': 'python3'},
  'language_info': {'codemirror_mode': {'name': 'ipython', 'version': 3},
   'file_extension': '.py',
   'mimetype': 'text/x-python',
   'name': 'python',
   'nbconvert_exporter': 'python',
   'pygments_lexer': 'ipython3',
   'version': '3.7.3'}},
 'nbformat': 4,
 'nbformat_minor': 4}
import tensorflow as tf
from tensorflow import keras
from tensorflow import lite
import tensorflow as tf